package connectfour;

import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionListener;
import java.applet.Applet;
import java.awt.*;
import java.awt.event.KeyEvent;
import java.util.Random;


	public class ConnectFour extends JoeApplet implements KeyListener, MouseMotionListener
	{
		private int[][] board=new int[6][7];
		final int EMPTY=0;
		final int RED=1;
		final int YELLOW=2;
		Font big= new Font(Font.SERIF,Font.BOLD,30);
		private int height=700;
		private int width=1200;
		private Coordinates[][] places= new Coordinates[6][7];
		private int xCo= 305;
		private int yCo= 116;
		private boolean userTurn;
		
		
		private boolean showStartScreen=true;
		private boolean showEndScreen=false;
		
		ComputerConnectFourPlayer christopher= new ComputerConnectFourPlayer();

		//This will establish the censors necessary for the game to function
		public void init()
		{
			addKeyListener(this);
			addMouseMotionListener(this);
			for(int r=0; r<6; r++)
			{
				for(int c=0; c<7; c++)
				{
					places[r][c]= new Coordinates(xCo, yCo);
					xCo+=85;
				}
				yCo+=78;
				xCo=305;
			}
			if(Math.random()>=0.5)
			{
				userTurn=true;
			}
		}
		
		//This will draw a start screen for the user to see.
		public void drawStartScreen(Graphics art)
		{
			art.setFont(big);
			setBackground(Color.red);
			art.setColor(Color.black);
			art.drawString("Instructions:  Once you begin the game you will face the legendary DougBot in connect 4.", 50,50);
			art.drawString("                     You must click on the row where you want to drop a piece to place it.",50,100);
			art.drawString("                     First one to get four in a row wins!",50,150);
			art.drawString("Press enter to begin!",500, 350); 
		}
		
		public void drawBoard(Graphics art)
		{
			setBackground(Color.black);
			art.setColor(Color.blue);
			art.fillRect(300, 110, 603 ,480);
			for(int r=0; r<6; r++)
			{
				for(int c=0; c<7; c++)
				{
					if(board[r][c]==EMPTY)
					{
						art.setColor(Color.black);
					}
					else if(board[r][c]==RED)
					{
						art.setColor(Color.red);
					}
					else
					{
						art.setColor(Color.yellow);
					}
					art.fillOval(places[r][c].getX(), places[r][c].getY(),82 , 75);
				}
			}
			
			
		}
		
		public void userMove()
		{
			
		}
		
		public void move()
		{
			if(userTurn)
			{
				userMove();
				userTurn=false;
			}
		}
		
			public void paint(Graphics art)
		{
			setSize(width,height);
			setFrameRate(200);
			if (showStartScreen)
			{
				drawStartScreen(art);
			}
			else if (!showStartScreen&&!showEndScreen)
			{
				drawBoard(art);
				move();
			}
			else if(showEndScreen)
			{
			
			}
			repaint();
		}

			@Override
			public void mouseDragged(MouseEvent arg0) {
				// TODO Auto-generated method stub
				
			}

			@Override
			public void mouseMoved(MouseEvent arg0) {
				// TODO Auto-generated method stub
				
			}

			@Override
			public void keyPressed(KeyEvent e) 
			{
				int key= e.getKeyCode();
				if (key==e.VK_ENTER)
				{
					if (showStartScreen)
					{
						showStartScreen=false;
					
					}
					else if (showEndScreen)
					{
						showStartScreen=true;
						showEndScreen=false;
					}
				}
				if(key==e.VK_1)
				{
					
				}
				if(key==e.VK_2)
				{
					
				}if(key==e.VK_3)
				{
					
				}if(key==e.VK_4)
				{
					
				}if(key==e.VK_5)
				{
					
				}if(key==e.VK_6)
				{
					
				}if(key==e.VK_7)
				{
					
				}
			}

			@Override
			public void keyReleased(KeyEvent arg0) {
				// TODO Auto-generated method stub
				
			}

			@Override
			public void keyTyped(KeyEvent arg0) {
				// TODO Auto-generated method stub
				
			}
		

}
